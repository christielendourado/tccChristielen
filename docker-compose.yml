version: '3.7'

services:

  kong:
    image: kong:latest
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    volumes:
      - ./kong/:/usr/local/kong/declarative
    networks:
      - kong-net-chris
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    container_name: kong-database
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    networks:
      - kong-net-chris
        
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:0.14.1
    ports:
      - 1337:1337
    environment:
      - NODE_ENV=development #production or development | defaults to development
      - TOKEN_SECRET=teste
      - DB_ADAPTER=postgres
      - DB_HOST=kong-database 
      - DB_USER=kong
      - DB_PASSWORD=kong
      - DB_DATABASE=kong
      - DB_PG_SCHEMA=konga
    networks: 
      - kong-net-chris
    depends_on:
      - kong-database
    ports:
      - "1337:1337"

  informacoescadastrais:
    image: christielendourado/informacoescadastrais:tagname
    ports:
      - 7000:8080
    networks:
      - kong-net-chris
    tty:
      true
    restart:
      unless-stopped

  integrativo:
    build: christielendourado/integrativo:tagname
    ports:
      - 7001:8081
    networks:
      - kong-net-chris
    tty:
      true
    restart:
      unless-stopped

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq1
    restart: always
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq 
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - kong-net-chris      
      
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
        MONGO_INITDB_ROOT_USERNAME: admin
        MONGO_INITDB_ROOT_PASSWORD: admin123
        MONGO_INITDB_DATABASE: informacoescadastrais-db
    ports:
        - 27017:27017
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro       
    networks:
        - kong-net-chris    

networks:
  kong-net-chris:
    external: false